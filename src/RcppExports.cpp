// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Delta_calc_cpp
NumericVector Delta_calc_cpp(NumericVector mm, NumericVector mmlag, NumericMatrix gammamat, double tol, int maxit, int trace);
RcppExport SEXP _OMTM1_Delta_calc_cpp(SEXP mmSEXP, SEXP mmlagSEXP, SEXP gammamatSEXP, SEXP tolSEXP, SEXP maxitSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mm(mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mmlag(mmlagSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type gammamat(gammamatSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< int >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(Delta_calc_cpp(mm, mmlag, gammamat, tol, maxit, trace));
    return rcpp_result_gen;
END_RCPP
}
// Delta_calcWith0TxProbs_cpp
NumericVector Delta_calcWith0TxProbs_cpp(NumericVector mm, NumericVector mmlag, NumericMatrix gammamat, NumericMatrix CalcTxMtx, double tol, int maxit, int trace);
RcppExport SEXP _OMTM1_Delta_calcWith0TxProbs_cpp(SEXP mmSEXP, SEXP mmlagSEXP, SEXP gammamatSEXP, SEXP CalcTxMtxSEXP, SEXP tolSEXP, SEXP maxitSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mm(mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mmlag(mmlagSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type gammamat(gammamatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type CalcTxMtx(CalcTxMtxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< int >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(Delta_calcWith0TxProbs_cpp(mm, mmlag, gammamat, CalcTxMtx, tol, maxit, trace));
    return rcpp_result_gen;
END_RCPP
}
// delta_it_cpp
NumericVector delta_it_cpp(NumericVector mm, NumericVector mmlag, NumericMatrix gammamat, double tol, int maxit, int trace);
RcppExport SEXP _OMTM1_delta_it_cpp(SEXP mmSEXP, SEXP mmlagSEXP, SEXP gammamatSEXP, SEXP tolSEXP, SEXP maxitSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mm(mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mmlag(mmlagSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type gammamat(gammamatSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< int >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(delta_it_cpp(mm, mmlag, gammamat, tol, maxit, trace));
    return rcpp_result_gen;
END_RCPP
}
// dfdDelta_calc_cpp
NumericMatrix dfdDelta_calc_cpp(NumericVector mmlag, NumericMatrix hmat);
RcppExport SEXP _OMTM1_dfdDelta_calc_cpp(SEXP mmlagSEXP, SEXP hmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mmlag(mmlagSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type hmat(hmatSEXP);
    rcpp_result_gen = Rcpp::wrap(dfdDelta_calc_cpp(mmlag, hmat));
    return rcpp_result_gen;
END_RCPP
}
// dhd_gamma_calc
NumericMatrix dhd_gamma_calc(NumericMatrix hmat, NumericVector mm_lag, NumericMatrix tmp_mat);
RcppExport SEXP _OMTM1_dhd_gamma_calc(SEXP hmatSEXP, SEXP mm_lagSEXP, SEXP tmp_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type hmat(hmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mm_lag(mm_lagSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tmp_mat(tmp_matSEXP);
    rcpp_result_gen = Rcpp::wrap(dhd_gamma_calc(hmat, mm_lag, tmp_mat));
    return rcpp_result_gen;
END_RCPP
}
// dhdgamma_mmlag_calc_cpp
NumericMatrix dhdgamma_mmlag_calc_cpp(NumericMatrix hmat1, NumericVector mmlag1);
RcppExport SEXP _OMTM1_dhdgamma_mmlag_calc_cpp(SEXP hmat1SEXP, SEXP mmlag1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type hmat1(hmat1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mmlag1(mmlag1SEXP);
    rcpp_result_gen = Rcpp::wrap(dhdgamma_mmlag_calc_cpp(hmat1, mmlag1));
    return rcpp_result_gen;
END_RCPP
}
// dmumdtheta_calc_cpp
NumericMatrix dmumdtheta_calc_cpp(NumericMatrix dpidtheta);
RcppExport SEXP _OMTM1_dmumdtheta_calc_cpp(SEXP dpidthetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dpidtheta(dpidthetaSEXP);
    rcpp_result_gen = Rcpp::wrap(dmumdtheta_calc_cpp(dpidtheta));
    return rcpp_result_gen;
END_RCPP
}
// dpidtheta_calc_cpp
NumericMatrix dpidtheta_calc_cpp(NumericMatrix detadtheta, NumericVector dpideta);
RcppExport SEXP _OMTM1_dpidtheta_calc_cpp(SEXP detadthetaSEXP, SEXP dpidetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type detadtheta(detadthetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dpideta(dpidetaSEXP);
    rcpp_result_gen = Rcpp::wrap(dpidtheta_calc_cpp(detadtheta, dpideta));
    return rcpp_result_gen;
END_RCPP
}
// dpidtheta_calc1_cpp
NumericMatrix dpidtheta_calc1_cpp(NumericMatrix diagmtx, NumericVector dpideta, NumericVector xit);
RcppExport SEXP _OMTM1_dpidtheta_calc1_cpp(SEXP diagmtxSEXP, SEXP dpidetaSEXP, SEXP xitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type diagmtx(diagmtxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dpideta(dpidetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xit(xitSEXP);
    rcpp_result_gen = Rcpp::wrap(dpidtheta_calc1_cpp(diagmtx, dpideta, xit));
    return rcpp_result_gen;
END_RCPP
}
// dpidtheta_calc2_cpp
NumericMatrix dpidtheta_calc2_cpp(NumericMatrix diagmtx, NumericVector dpideta, NumericVector xit, NumericMatrix ppoMat);
RcppExport SEXP _OMTM1_dpidtheta_calc2_cpp(SEXP diagmtxSEXP, SEXP dpidetaSEXP, SEXP xitSEXP, SEXP ppoMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type diagmtx(diagmtxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dpideta(dpidetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xit(xitSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ppoMat(ppoMatSEXP);
    rcpp_result_gen = Rcpp::wrap(dpidtheta_calc2_cpp(diagmtx, dpideta, xit, ppoMat));
    return rcpp_result_gen;
END_RCPP
}
// hmat_calc_cpp
NumericMatrix hmat_calc_cpp(NumericVector Deltavec, NumericMatrix gammamat);
RcppExport SEXP _OMTM1_hmat_calc_cpp(SEXP DeltavecSEXP, SEXP gammamatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Deltavec(DeltavecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type gammamat(gammamatSEXP);
    rcpp_result_gen = Rcpp::wrap(hmat_calc_cpp(Deltavec, gammamat));
    return rcpp_result_gen;
END_RCPP
}
// loglikelihood
double loglikelihood();
RcppExport SEXP _OMTM1_loglikelihood() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(loglikelihood());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_OMTM1_Delta_calc_cpp", (DL_FUNC) &_OMTM1_Delta_calc_cpp, 6},
    {"_OMTM1_Delta_calcWith0TxProbs_cpp", (DL_FUNC) &_OMTM1_Delta_calcWith0TxProbs_cpp, 7},
    {"_OMTM1_delta_it_cpp", (DL_FUNC) &_OMTM1_delta_it_cpp, 6},
    {"_OMTM1_dfdDelta_calc_cpp", (DL_FUNC) &_OMTM1_dfdDelta_calc_cpp, 2},
    {"_OMTM1_dhd_gamma_calc", (DL_FUNC) &_OMTM1_dhd_gamma_calc, 3},
    {"_OMTM1_dhdgamma_mmlag_calc_cpp", (DL_FUNC) &_OMTM1_dhdgamma_mmlag_calc_cpp, 2},
    {"_OMTM1_dmumdtheta_calc_cpp", (DL_FUNC) &_OMTM1_dmumdtheta_calc_cpp, 1},
    {"_OMTM1_dpidtheta_calc_cpp", (DL_FUNC) &_OMTM1_dpidtheta_calc_cpp, 2},
    {"_OMTM1_dpidtheta_calc1_cpp", (DL_FUNC) &_OMTM1_dpidtheta_calc1_cpp, 3},
    {"_OMTM1_dpidtheta_calc2_cpp", (DL_FUNC) &_OMTM1_dpidtheta_calc2_cpp, 4},
    {"_OMTM1_hmat_calc_cpp", (DL_FUNC) &_OMTM1_hmat_calc_cpp, 2},
    {"_OMTM1_loglikelihood", (DL_FUNC) &_OMTM1_loglikelihood, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_OMTM1(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
